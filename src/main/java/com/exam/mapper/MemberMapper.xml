<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.mapper.MemberMapper">
   
	<!-- 1.id check -->
	 <select id="idCheck" parameterType="string" resultType="MemberDTO">
	   select userid, passwd, username, post,
	          addr1, addr2, phone1, phone2, phone3,
	          email1, email2
	   from member where userid = #{userid}
	</select>
	
	<!-- 2. 멤버 추가 -->
	<insert id="memberAdd" parameterType="MemberDTO">
	   insert into member (userid,passwd,username,post,
	                       addr1,addr2,phone1,phone2,phone3,
	                       email1,email2)
	   values ( #{userid},#{passwd},#{username},#{post},
	            #{addr1},#{addr2},
	            #{phone1},#{phone2},#{phone3},
	            #{email1},#{email2} )  
	</insert>
	
	<!-- 3. 로그인 -->
	<select id="login" parameterType="hashmap" resultType="MemberDTO">
	   select userid, passwd, username, post,
	          addr1, addr2, phone1, phone2, phone3,
	          email1, email2
	   from member
	   where userid = #{userid} and passwd = #{passwd}
	</select>
	
	<!-- 4. mypage 확인 -->
	 <select id="mypage" parameterType="string" resultType="MemberDTO">
	   select userid, passwd, username, post,
	          addr1, addr2, phone1, phone2, phone3,
	          email1, email2
	   from member
	   where userid = #{userid}
	 </select>
	 
	 <!-- 5. id 찾기 -->
	 <select id="findid" parameterType="MemberDTO" resultType="string">
	 	select userid from member
	 	where username=#{username} and phone1=#{phone1} and
	 	phone2=#{phone2} and phone3=#{phone3}
	 </select>
 
 	 <!-- 6. pw 찾기 -->
	 <select id="findpw" parameterType="MemberDTO" resultType="string">
	 	select passwd from member
	 	where userid=#{userid}
	 </select>
	 
	 <update id="update" parameterType="MemberDTO" >
    update member
    set post = #{post},addr1 = #{addr1},addr2 = #{addr2},phone1 = #{phone1}, phone2 = #{phone2},
        phone3 = #{phone3},email1 = #{email1},email2 = #{email2}
    where userid = #{userid}
    </update>
    
    <delete id="withdraw" parameterType="String">
    	delete from member
    	where userid = #{userid}
    </delete>
    
   	<select id="findByUserid" parameterType="string" resultType="MemberDTO">
		select userid, passwd, username from member
		where userid=#{userid}
	</select>
	
	<update id="newPassword" parameterType="hashmap">
		update member set passwd = #{passwd}
		where userid=#{userid}
	</update>
	 
	 
	 
</mapper>